@startuml

class ClosedInterval
class Color
class Coordinate
class Direction
class Message
class Line
class Board
class Player
class Turn
class YesNoDialog
class Connect4

class Connect4View
class BoardView
class TurnView
class PlayerView
class ColorView

Connect4 *-- Board
Connect4 *-- Turn
Turn --> Board
Turn o-- Player
Player ..> Color
Player --> Board
Board ..> Coordinate
Board ..> Line
Board ..> Direction
Direction --> Coordinate
Direction ..> Coordinate
Coordinate *-- ClosedInterval

Connect4View *-- Connect4
Connect4View ..> YesNoDialog
Connect4View *-- BoardView
Connect4View *-- TurnView
Connect4View ..> Message
TurnView --> Connect4
TurnView ..> Message
TurnView ..> PlayerView
BoardView --> Connect4
BoardView ..> Coordinate
BoardView ..> Message
BoardView ..> ColorView
PlayerView ..> Message
ColorView --> Color

Connect4View : -constructor()
Connect4View : +playGames()
Connect4View : +playGame()
Connect4View : +isResumed()

Connect4 : -board{}
Connect4 : -turn{}
Connect4 : -constructor()
Connect4 : +isFinished()
Connect4 : +reset()
Connect4 : +getBoard()
Connect4 : +getTurn()

YesNoDialog : {static} -AFFIRMATIVE
YesNoDialog : {static} -NEGATIVE
YesNoDialog : {static} -SUFFIX
YesNoDialog : {static} -MESSAGE
YesNoDialog : -answer
YesNoDialog : +read()
YesNoDialog : +isAffirmative()
YesNoDialog : +isNegative()
YesNoDialog : +getAnswer()

Turn : {static} -NUMBER_PLAYERS
Turn : -players
Turn : -activePlayer
Turn : -board{}
Turn : -constructor(board{})
Turn : +reset()
Turn : +swtichActivePlayer()
Turn : +getBoard()
Turn : +getPlayers()
Turn : +getActivePlayer()

TurnView : -turn
TurnView : -constructor(turn)
TurnView : +play()
TurnView : +writeResult()

Player : -color
Player : -board{}
Player : -constructor(color, board)
Player : +isValidColumn(column)
Player : +isColumnCompleted(column)
Player : +dropToken(column)
Player : +getColor()
Player : +getBoard()

PlayerView : -player
PlayerView : -constructor(player)
PlayerView : +play()
PlayerView : +writeWinner()

Board : -colors[]
Board : -lastDrop
Board : +constructor()
Board : +reset()
Board : +dropToken(column, color)
Board : +isComplete(column)
Board : +isFinished()
Board : +isWinner()
Board : +isConnect4(line)
Board : +isOccupied(coordinate, color)
Board : +isEmpty(coordinate)
Board : +getColor(coordinate)

BoardView : -board
BoardView : -constructor(board)
BoardView : +writeln()
BoardView : -writeHorizontal()

Line : {static} +LENGTH
Line : -origin
Line : -coordinates
Line : -oppositeDirection
Line : +constructor(coordinate{})
Line : +set(direction)
Line : +shift()
Line : +getCoordinates()

Message : {static} +TITLE
Message : {static} +HORIZONTAL_LINE
Message : {static} +VERTICAL_LINE
Message : {static} +TURN
Message : {static} +ENTER_COLUMN_TO_DROP
Message : {static} +INVALID_COLUMN
Message : {static} +COMPLETED_COLUMN
Message : {static} +PLAYER_WIN
Message : {static} +PLAYERS_TIED
Message : {static} +RESUME
Message : -string
Message : +constructor(string)
Message : +write()
Message : +writeln()
 
Direction : {static} +NORTH
Direction : {static} +NORTH_EAST
Direction : {static} +EAST
Direction : {static} +SOUTH_EAST
Direction : {static} +SOUTH
Direction : {static} +SOUTH_WEST
Direction : {static} +WEST
Direction : {static} +NORTH_WEST
Direction : -coordinate{}
Direction : +constructor(row, column)
Direction : +getOpposite()
Direction : {static} +values()
Direction : +getCoordinate()
Direction : +halfValues()

Coordinate : {static} +ORIGIN
Coordinate : {static} +NUMBER_ROWS
Coordinate : {static} -ROWS
Coordinate : {static} +NUMBER_COLUMNS
Coordinate : {static} -COLUMNS
Coordinate : -row
Coordinate : -column
Coordinate : +constructor(row, column)
Coordinate : +shifted(coordinate)
Coordinate : +isValid()
Coordinate : {static} +isColumnValid(column)
Coordinate : {static} -isRowValid(row)
Coordinate : +getRow()
Coordinate : +getColumn()
Coordinate : +equals(coordinate)
Coordinate : +toString()

Color : {static} +RED
Color : {static} +YELLOW
Color : {static} +NULL
Color : -string
Color : +constructor(string)
Color : {static} +get(ordinal)
Color : {static} -values()
Color : +toString()

ColorView : -color
ColorView : -constructor(color)
ColorView : +write()

ClosedInterval : -min
ClosedInterval : -max
ClosedInterval : +constructor(min, max)
ClosedInterval : +isIncluded(value)

@enduml


